{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","imdbUrl","imgUrl","description","title","light","useCallback","str","filter","regexp","RegExp","matchValue","match","split","map","s","index","array","length","c","shift","className","hightlight","src","alt","href","MoviesList","movies","imdbId","App","useState","setFilter","filterMovies","moviesFromServer","toLowerCase","startsWith","trim","find","word","htmlFor","type","id","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"ytEAoCO,IAAMA,EAA6B,SAACC,GACzC,MAEIA,EAAMC,MADRC,EADF,EACEA,QAASC,EADX,EACWA,OAAQC,EADnB,EACmBA,YAAaC,EADhC,EACgCA,MAG1BC,EAAQC,uBAAY,SAACC,GACzB,OAvCJ,SAAoBC,EAAgBD,GAClC,IAAKC,EACH,OAAOD,EAGT,IAAME,EAAS,IAAIC,OAAOF,EAAQ,MAC5BG,EAAaJ,EAAIK,MAAMH,GAE7B,OAAIE,EACKJ,EAAIM,MAAMJ,GAAQK,KAAI,SAACC,EAAGC,EAAOC,GACtC,GAAID,EAAQC,EAAMC,OAAS,EAAG,CAC5B,IAAMC,EAAIR,EAAWS,QAErB,OACE,qCACGL,EACD,sBAAMM,UAAU,aAAhB,SAA8BF,OAKpC,OAAOJ,KAIJR,EAcEe,CAAWvB,EAAMS,OAAQD,KAC/B,CAACR,EAAMS,SAEV,OACE,sBAAKa,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEE,IAAKrB,EACLsB,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEE,IAAI,wBACJC,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BhB,EAAMD,UAIrC,sBAAKiB,UAAU,UAAf,UACGhB,EAAMF,GACP,uBACA,mBAAGsB,KAAMxB,EAAT,4BChEGyB,EAA8B,SAAC3B,GAAD,OACzC,qBAAKsB,UAAU,SAAf,SACGtB,EAAM4B,OAAOb,KAAI,SAAAd,GAAK,OACrB,cAAC,EAAD,CAA8BA,MAAOA,EAAOQ,OAAQT,EAAMS,QAA1CR,EAAM4B,c,OCPfC,EAAgB,WAC3B,MAA4BC,mBAAS,IAArC,mBAAOtB,EAAP,KAAeuB,EAAf,KAEMC,EAAeC,EAClBzB,QAAO,gBAAGJ,EAAH,EAAGA,MAAOD,EAAV,EAAUA,YAAV,OACNC,EAAM8B,cAAcC,WAAW3B,EAAO4B,OAAOF,gBAC1C/B,EAAYU,MAAM,KAClBwB,MAAK,SAAAC,GAAI,OAAIA,EACXJ,cAAcC,WAAW3B,EAAO4B,OAAOF,qBAEhD,OACE,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOkB,QAAQ,eAAelB,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEmB,KAAK,OACLC,GAAG,eACHpB,UAAU,QACVqB,YAAY,mBACZC,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAWd,EAAUc,EAAMC,OAAOH,iBAKnDX,EAAad,OAAS,EACnB,cAAC,EAAD,CAAYS,OAAQK,EAAcxB,OAAQA,IAC1C,oBAAIa,UAAU,YAAd,+CAIN,qBAAKA,UAAU,UAAf,mCCvCN0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.24681d61.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport './MovieCard.scss';\n\nfunction hightlight(filter: string, str: string) {\n  if (!filter) {\n    return str;\n  }\n\n  const regexp = new RegExp(filter, 'ig');\n  const matchValue = str.match(regexp);\n\n  if (matchValue) {\n    return str.split(regexp).map((s, index, array) => {\n      if (index < array.length - 1) {\n        const c = matchValue.shift();\n\n        return (\n          <>\n            {s}\n            <span className=\"hightlight\">{c}</span>\n          </>\n        );\n      }\n\n      return s;\n    });\n  }\n\n  return str;\n}\n\ninterface Props {\n  movie: Movie;\n  filter: string;\n}\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = props.movie;\n\n  const light = useCallback((str: string) => {\n    return hightlight(props.filter, str);\n  }, [props.filter]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{light(title)}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {light(description)}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[],\n  filter: string,\n}\n\nexport const MoviesList: React.FC<Props> = (props) => (\n  <div className=\"movies\">\n    {props.movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} filter={props.filter} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [filter, setFilter] = useState('');\n\n  const filterMovies = moviesFromServer\n    .filter(({ title, description }) => (\n      title.toLowerCase().startsWith(filter.trim().toLowerCase())\n      || description.split(' ')\n        .find(word => word\n          .toLowerCase().startsWith(filter.trim().toLowerCase()))));\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={filter}\n                onChange={(event) => setFilter(event.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n        {filterMovies.length > 0\n          ? <MoviesList movies={filterMovies} filter={filter} />\n          : <h2 className=\"no-movies\">No movies found for your query</h2>}\n\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}